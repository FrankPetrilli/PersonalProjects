syntax on
set bg=dark
" set smartindent
filetype plugin on
filetype indent on
filetype plugin indent on
set number
set autoread
" Map F10 to perform a (set mark z)->(top of file)->(indent)->(to bottom of file)->(return to mark)
"nmap <F10> gg=G
nmap <F10> mzgg=G`z
set pastetoggle=<F11>
autocmd filetype python nnoremap <F4> :w <bar> exec '!python '.shellescape('%')<CR>
autocmd filetype c nnoremap <F4> :w <bar> exec '!gcc '.shellescape('%').' -o '.shellescape('%:r').' && ./'.shellescape('%:r')'.out'<CR>
autocmd filetype cpp nnoremap <F4> :w <bar> exec '!g++ '.shellescape('%').' -o '.shellescape('%:r').' && ./'.shellescape('%:r')'.out'<CR>
autocmd filetype java nnoremap <F4> :w <bar> exec '!javac '.shellescape('%').' && java '.shellescape('%:r')<CR>
autocmd filetype java nnoremap <F3> :w <bar> exec '!javac '.shellescape('%'). ' && echo "Compile successful" \|\| echo "Compile failed" '<CR>
nnoremap <F8> :w <bar> :lcd %:p:h <bar> exec '!git add '.shellescape('%'). '&& git commit && git push'<CR>
try
	execute pathogen#infect()
	let g:syntastic_mode_map = { "mode": "passive" }
	nnoremap <F9> :SyntasticCheck <CR>
catch
endtry
